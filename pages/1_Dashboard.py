# pages/1_Dashboard.py
import streamlit as st
from firebase_admin import firestore

st.set_page_config(page_title="Dashboard", layout="wide")

# --- CONTROLE DE ACESSO ---
# Verifica se o usu√°rio est√° logado. Se n√£o, redireciona para a p√°gina principal.
if not st.session_state.get('logged_in', False):
    st.error("Voc√™ precisa estar logado para acessar esta p√°gina.")
    st.page_link("app.py", label="Voltar para o Login")
    st.stop() # Interrompe a execu√ß√£o da p√°gina

# --- CONTE√öDO DA P√ÅGINA PROTEGIDA ---

# Obt√©m o cliente do Firestore (a inicializa√ß√£o j√° foi feita no app.py)
db = firestore.client()

# Pega informa√ß√µes do usu√°rio do session_state
user_info = st.session_state['user_info']
user_uid = user_info['localId']
user_email = user_info['email']

# Busca o nome do usu√°rio no Firestore
try:
    user_doc = db.collection("users").document(user_uid).get()
    if user_doc.exists:
        user_name = user_doc.to_dict().get("name", "Usu√°rio")
    else:
        user_name = "Usu√°rio"
except Exception as e:
    user_name = "Usu√°rio"
    st.error(f"N√£o foi poss√≠vel buscar seu nome: {e}")

st.sidebar.header(f"Bem-vindo, {user_name}!")
if st.sidebar.button("Logout"):
    st.session_state['logged_in'] = False
    st.session_state['user_info'] = None
    st.switch_page("app.py") # Redireciona para a p√°gina de login

st.title("üìä Seu Dashboard Protegido")
st.markdown(f"Voc√™ est√° logado com o email: **{user_email}**")

st.divider()

st.header("Conte√∫do Exclusivo")
st.write("Aqui voc√™ pode colocar gr√°ficos, tabelas e outras informa√ß√µes que s√≥ usu√°rios logados podem ver.")

# Exemplo de conte√∫do
st.line_chart([10, 20, 15, 30, 25])